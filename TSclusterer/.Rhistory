# requires pre-run of iren_analysis.r
#for (i in 1:200) {
#for (i in 1:200) {
#for (i in 1:200) {
source('~/Work/Projects/NRG4Cast/D4.3 Root Cause Analysis/Data Analysis/iren_clustering.R')
source('~/Work/Projects/NRG4Cast/D4.3 Root Cause Analysis/Data Analysis/iren_clustering.R')
sc
sc <- read.table("series.csv", header=F, sep=",")
setwd("~/Work/SW/utilities/NRG4Cast/TSclusterer")
sfsda
sc
sc <- read.table("series.csv", header=F, sep=",")
read.csv("series.csv")
sc
sc
sc
setwd("~/Work/SW/utilities/NRG4Cast/TSclusterer")
setwd("~/Work/SW/utilities/NRG4Cast/TSclusterer")
sc
sc <- read.csv("series.csv", header=F)
sc
nrow(sc)
ncol(sc)
ncol(sc[1])
ncol(sc[,1])
sc[1]
sc[,1]
sc[,1:]
sc[,1
]
sc[]
sc[1,]
library(dtw)
install.packages("dtw")
library(dtw)
distMatrix(sc, method="DTW")
dist(sc, method="DTW")
rep(1,1)
rep(1, 3)
dist(sc)
dist(sc, method="DTW")
dist(t(sc), method="DTW")
sc[1,]
sc[2,]
sc[4,]
size(sc)
ncol(sc)
ncol(sc[1,])
ncol(sc[2,])
ncol(sc[,])
c <- seq(1, 1)
c
c <- seq(1, 10)
c
c <- seq(1, nrow(sc))
c
ncol(sc[c,])
cs <- seq(1, nrow(sc))
ncol(sc[cs,])
c(0,1,2)
for (i in sc)
{ ncol(sc[i,])}
sc
s
c
for (i in c)
{ ncol(sc[i,])}
for (i in c)
{ print(ncol(sc[i,]))}
sum(is.na(sc))
is.na(sc)
sc[is.na(sc)]<-0
is.na(sc)
is.na(sc)
sc[is.na(sc)]<-0
sc
is.na(sc)
is.na(sc).x
which(is.na(sc))
sum(is.na(sc))
sc
dist(sc, method="DTW")
hc <- hclust(distMatrix, method="average")
distMatrix <- dist(sc, method="DTW")
hc <- hclust(distMatrix, method="average")
plot(hc)
plot(sc)
plot(hc)
sc[,1]
sc[1,]
plot(sc[1,])
plot(sc[,1])
plot(sc[1,])
lines(sc[,1])
lines(sc[1,])
plot(sc[1,])
plot(sc[,1])
plot(sc[,2])
plot(sc[,200])
sc[,2]
sc[2,0]
sc[2,]
myr = sc[2,]
myr
scale(myr)
scaled <- scale(myrÅ¾)
scaled <- scale(myr)
scaled
scaled[1]
scaled[10]
is.na(myr)
sum(is.na(myr))
scaled[10]
is.na(scaled)
scale
scale(myr)
var(myr)
myr
var
mean(myr)
avg(myr)
average(myr)
var(1:10)
1:10
var(myr)
myr
var(myr[5,])
myr[1:5]
var(myr[1:5])
var(t(myr[1:5])
)
1:10
myr
myr[2]
myr[2,]
myr[2]
myr[,2]
myr[,2]
myr[2,2]
myr[1,2]
myr[1,400]
myr[,1:10]
myr[,2:10]
myr[,1]
class(myr)
as.integer(myr)
var(as.integer(myr))
scale(as.integer(myr))
for (i in c) { }
sc
apply(sc, 1, sum)
apply(sc, 1, scale)
apply(sc, 1, mean)
apply(sc, 2, mean)
apply(sc, 3, mean)
apply(sc, 1, mean)
apply(sc, 1, scale)
apply(sc, 1, var)
myT = apply(sc, 1, scale)
myT
myT[1,]
myT[,1]
myT[1]
myT[1,]
myT[2,]
myT[is.na(myT)]<-0
distMatrix <- dist(myT, method="DTW")
distMatrix <- dist(myT)
hc <-hclust(distMatrix, method="average")
plot(hc)
plot(hc, main="")
distMatrix <- dist(t(myT))
hc <-hclust(distMatrix, method="average")
plot(hc, main="")
plot(cutree(hc, h=40)
)
plot(hc, main="")
groups <- cutree(hc, k=5)
rect.hclust(hc, k=5, border="red")
plot(myT[1])
plot(myT[1,])
plot(myT[,1])
plot(myT[,1])
myT [,1]
plot(myT[,2])
plot(myT[,3])
plot(myT[,4])
plot(hc, main="")
plot(myT[,20])
plot(hc, main="")
plot(myT[,10])
plot(hc, main="")
plot(myT[,21])
plot(myT[,22])
plot(myT[,21])
plot(myT[,22])
plot(myT[,13])
plot(hc, main="")
plot(myT[,15])
plot(myT[,16])
lines(myT$1)
lines(myT$1)
lines(myT[0,1])
lines(myT[,1])
lines(myT[,2])
plot()
plot(myT[,1])
plot(myT[,5])
plot(myT[,15])
plot(myT[,17])
plot(myT[,18])
plot(myT[,10])
plot(type="n")
plot(myT[,1], type="l")
plot(myT[,13], type="l")
plot(myT[,14], type="l")
plot([myT[,14]], type="l")
plot(myT[,14], type="l")
lines(myT[,15])
lines(myT[,16])
lines(myT[,17])
plot(hc, main="")
rect.hclust(hc, k=5, border="red")
rect.hclust(hc, k=7, border="red")
plot(hc, main="")
rect.hclust(hc, k=7, border="red")
source('~/Work/SW/utilities/NRG4Cast/TSclusterer/TSClusterer.r')
hc <- hclust(distMatrix, method="average")
rect.hclust(hc, k=5, border="red")
plot(hc, main="")
rect.hclust(hc, k=5, border="red")
rect.hclust(hc, k=7, border="red")
plot(hc, main="")
rect.hclust(hc, k=7, border="red")
plot(as.dendrogram(hc))
plot(hc, main="", ylim=c(0,20000))
plot(hc, main="", ylim=c(0,2000))
plot(hc, main="", ylim=c(0,20))
plot(hc, main="", ylim=c(0,20), ylab=NULL)
plot(hc, main="", ylim=c(0,1), ylab=NULL)
plot(hc, main="", ylim=c(0,0.00001), ylab=NULL)
plot(hc, main="", ylim=c(0,20), ylab=NULL)
rect.hclust(hc, k=7, border="red")
rect.hclust(hc, k=6, border="red")
plot(as.dendrogram(hc), ylim=c(0,2000))
plot(as.dendrogram(hc), ylim=c(0,20000))
rect.hclust(hc, k=6, border="red")
distMatrix <- dist(myT) #, method="DTW")
source('~/Work/SW/utilities/NRG4Cast/TSclusterer/TSClusterer.r')
plot(hc)
# hieararchical clustering
source('~/Work/SW/utilities/NRG4Cast/TSclusterer/TSClusterer.r')
sc
scale(sc)
sc
sd(sc)
sd(sc[1])
sc
sc[1]
sc[,1]
sc[1,]
sd(sc[1,])
scale(sc[1])
scale(sc[1,])
scale(sc[1,])
apply(sc,1,sd)
stdev = apply(sc,1,sd)
meanvec = apply(sc, 1, mean)
scaledc = (sc - mean)/stdev
scaledc = (sc - mean) / stdev
mean
meanvec
scaledc = (sc - meanvec) / stdev
scaledc
distMatrix <- dist(scaledc)
hc <- hclust(distMatrix, method="average")
distMatrix
sc(10,)
scaledc[10,]
scaledc[9,]
scaledc[is.na(scaledc)]<-0
distMatrix <- dist(scaledc)
hc <- hclust(distMatrix, method="average")
plot(hc, main="")
plot(as.dendrogram(hc), main="")
rect.hclust(hc, k=6, border="red")
plot(as.dendrogram(hc), main="")
rect.hclust(hc, k=5, border="red")
